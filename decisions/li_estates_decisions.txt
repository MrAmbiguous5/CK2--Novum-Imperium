decisions = {
	ai_estates_income = {
		potential = {
			ai = yes
			is_ruler = no
			OR = {
				has_character_modifier = estates_1
				has_character_modifier = estates_2
				has_character_modifier = estates_3
				has_character_modifier = estates_4
				has_character_modifier = estates_5
			}
			OR = {
				NOT = { has_character_flag = estates_income }
				had_character_flag = {
					flag = estates_income
					days = 365
				}
			}
		}
		allow = { }
		effect = {
			clr_character_flag = estates_income
			set_character_flag = estates_income
			if = {
				limit = {
					has_character_modifier = estates_1
				}
				wealth = 1
			}
			if = {
				limit = {
					has_character_modifier = estates_2
				}
				wealth = 2
			}
			if = {
				limit = {
					has_character_modifier = estates_3
				}
				wealth = 3
			}
			if = {
				limit = {
					has_character_modifier = estates_4
				}
				wealth = 4
			}
			if = {
				limit = {
					has_character_modifier = estates_5
				}
				wealth = 5
			}
		}
		ai_will_do = {
			factor = 100
		}
	}
}

# Targetted decisions are possible vs _all_ other characters and shown are in the Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] ('self' MUST be set for decisions targetting only the taker, the other filter types can be set to lessen CPU load)
# ai_target_filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] (which characters for which the AI evaluates the decision.)
#	court: all characters in the AI's host court, including prisoners, and characters currently away (wards, prisoners, etc)
#	home_court: all characters in the AI's home court, including prisoners, and characters currently away (wards, prisoners, etc)
#	vassals: direct vassal rulers of the AI's employer
#	sub_realm: all characters below the AI's employer
#	realm: all characters in the same top realm as the AI
#	dynasty: all members of the same dynasty
#	rivals: your rivals plus any character you have an opinion modifier with 'crime = yes' set (the same set of characters the 'is_foe' trigger evaluates)
#	all: all living characters (Avoid if possible. VERY CPU-HEAVY!)
#	

targetted_decisions = {
	request_estates = {
		filter = home_court
		ai_target_filter = home_court
		
		potential = {
			is_ruler = yes
			war = no
		}
		from_potential = {
			has_ambition = obj_gain_estates_1
			NOR = {
				has_character_flag = requested_estates
				character = ROOT
				trait = incapable
			}
			age = 20
			is_female = no
			prisoner = no
			OR = {
				is_close_relative = ROOT
				dynasty = ROOT
			}
		}
		allow = {
			wealth = 50
		}
		effect = {
			FROM = {
				set_character_flag = requested_estates
			}
			character_event = {
				id = liestates.2
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.01	;slow it down
			}
			modifier = {
				factor = 0.1
				NOT = {
					is_close_relative = FROM
				}
			}
			modifier = {
				factor = 2.0
				wealth = 250
			}
			modifier = {
				factor = 2.0
				wealth = 500
			}
			modifier = {
				factor = 2.0
				trait = greedy
			}
			modifier = {
				factor = 2.0
				trait = ambitious
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 0.2
				trait = content
			}
			modifier = {
				factor = 0.2
				trait = charitable
			}
		}
	}
}